name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image
      run: docker build -t agriculture-app:latest .  # Ensure the image is built

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install gdown                                   # Install gdown to download files from Google Drive  

    - name: Download data from Google Drive
      run: |
        gdown "https://drive.google.com/uc?id=1K7CGM-do_N-hoRRFtyo0_bjhQEw35VzI" -O "./app/Crop Disease Prediction model.h5"
        # The file will be downloaded and saved at ./app/Crop Disease Prediction model.h5

        gdown "https://drive.google.com/file/d/1qGff2GL_azXE_3g1IjbipeWx55uXnzlE" -O "./app/DecisionTree.pkl"
        # The file will be downloaded and saved at ./app/DecisionTree.pkl
        




    - name: Verify model file download
      run: |
        if [ ! -f "./app/Crop Disease Prediction model.h5" ]; then
          echo "Model file not found!"
          exit 1
        fi
        if [ ! -f "./app/DecisionTree.pkl" ]; then
          echo "DecisionTree model file not found!"
          exit 1
        fi

    - name: Run tests
      run: |
        python -m unittest discover -s tests

  docker_build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: |
        docker build -t agriculture-app:latest .

    - name: Log in to Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

    - name: Tag and Push Docker image
      run: |
        docker tag agriculture-app:latest ${{ secrets.DOCKER_USERNAME }}/agriculture-app:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/agriculture-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker_build

    steps:
    - name: SSH into server and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/agriculture-app:latest
          docker stop agriculture-app || true
          docker rm agriculture-app || true
          docker run -d -p 80:5000 --name agriculture-app ${{ secrets.DOCKER_USERNAME }}/agriculture-app:latest